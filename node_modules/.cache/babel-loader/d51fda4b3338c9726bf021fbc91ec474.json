{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Duckz\\\\Henry\\\\M2\\\\FT-M2\\\\12-React-Redux\\\\homework\\\\src\\\\components\\\\Buscador\\\\Buscador.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Buscador.css';\nimport { addMovieFavorite, getMovies } from \"../../actions\";\nimport { bindActionCreators } from 'redux';\nimport * as actionsCreators from '../../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Buscador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.getMovies(this.state.title); // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\n  }\n\n  render() {\n    var _this$props$movies;\n\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buscador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            htmlFor: \"title\",\n            children: \"Pel\\xEDcula: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            autoComplete: \"off\",\n            value: title,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"BUSCAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_this$props$movies = this.props.movies) === null || _this$props$movies === void 0 ? void 0 : _this$props$movies.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${m.imdbID}`,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: m.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.props.addMovieFavorite(m),\n            children: \"Fav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // recibe la parte del estado que necesitamos\n  return {\n    movies: state.moviesLoaded // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actionsCreators, dispatch); // me genera funciones dispatch para cada actionCreator (linea 3)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\n)(Buscador); // ------------------------------------------------------------------------------------------------------------------------------//\n// import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { Link } from 'react-router-dom';\n// import './Buscador.css';\n// import { bindActionCreators } from 'redux';\n// import * as actionsCreators from '../../actions/index';\n// import { getMovies,addMovieFavorite } from \"../../actions\";\n// const Buscador = () => {\n//   const [state, setState] = useState({title: ''});\n//   function handleChange(event) {\n//     setState({ title: event.target.value });\n//   }\n//   let movies;\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     getMovies(state.title);\n//   }\n//     const { title } = state;\n//     return (\n//       <div>\n//         <h2>Buscador</h2>\n//         <form className=\"form-container\" onSubmit={(e) => handleSubmit(e)}>\n//           <div>\n//             <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\n//             <input\n//               type=\"text\"\n//               id=\"title\"\n//               autoComplete=\"off\"\n//               value={title}\n//               onChange={(e) => handleChange(e)}\n//             />\n//           </div>\n//           <button type=\"submit\">BUSCAR</button>\n//         </form>\n//         <ul>\n//          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\n//          {movies?.map(m=> (\n//            <div>\n//              <Link to= {`/movie/${m.imdbID}`}>\n//               <li>{m.Title}</li>\n//             </Link>\n//             <button onClick={() => addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\n//           </div>\n//          ))}\n//         </ul>\n//       </div>\n//     );\n// }\n// function mapStateToProps(state) {        // recibe la parte del estado que necesitamos\n//   return {\n//     movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\n//   };\n// }\n// function mapDispatchToProps(dispatch) {\n// \treturn bindActionCreators(actionsCreators, dispatch);   // me genera funciones dispatch para cada actionCreator (linea 3)\n// }\n// export default connect(\n//   mapStateToProps, mapDispatchToProps   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\n// )(Buscador);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Duckz/Henry/M2/FT-M2/12-React-Redux/homework/src/components/Buscador/Buscador.js"],"names":["React","Component","connect","Link","addMovieFavorite","getMovies","bindActionCreators","actionsCreators","Buscador","constructor","props","state","title","handleChange","event","setState","target","value","handleSubmit","preventDefault","render","e","movies","map","m","imdbID","Title","mapStateToProps","moviesLoaded","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Buscador.css';\r\nimport { addMovieFavorite, getMovies } from \"../../actions\";\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionsCreators from '../../actions/index';\r\n\r\n\r\n\r\nexport class Buscador extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ title: event.target.value });\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.getMovies(this.state.title);    // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <div>\r\n        <h2>Buscador</h2>\r\n        <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              autoComplete=\"off\"\r\n              value={title}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">BUSCAR</button>\r\n        </form>\r\n        <ul>\r\n         {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\r\n         {this.props.movies?.map(m=> (\r\n           <div>\r\n             <Link to= {`/movie/${m.imdbID}`}>\r\n              <li>{m.Title}</li>\r\n            </Link>\r\n            <button onClick={() => this.props.addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\r\n          </div>\r\n         ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {        // recibe la parte del estado que necesitamos\r\n  return {\r\n    movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators(actionsCreators, dispatch);   // me genera funciones dispatch para cada actionCreator (linea 3)\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\r\n)(Buscador);\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import './Buscador.css';\r\n// import { bindActionCreators } from 'redux';\r\n// import * as actionsCreators from '../../actions/index';\r\n// import { getMovies,addMovieFavorite } from \"../../actions\";\r\n\r\n\r\n\r\n// const Buscador = () => {\r\n//   const [state, setState] = useState({title: ''});\r\n\r\n//   function handleChange(event) {\r\n//     setState({ title: event.target.value });\r\n//   }\r\n  \r\n//   let movies;\r\n\r\n//   function handleSubmit(event) {\r\n//     event.preventDefault();\r\n//     getMovies(state.title);\r\n    \r\n//   }\r\n\r\n  \r\n//     const { title } = state;\r\n//     return (\r\n//       <div>\r\n//         <h2>Buscador</h2>\r\n//         <form className=\"form-container\" onSubmit={(e) => handleSubmit(e)}>\r\n//           <div>\r\n//             <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"title\"\r\n//               autoComplete=\"off\"\r\n//               value={title}\r\n//               onChange={(e) => handleChange(e)}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\">BUSCAR</button>\r\n//         </form>\r\n//         <ul>\r\n//          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\r\n//          {movies?.map(m=> (\r\n//            <div>\r\n//              <Link to= {`/movie/${m.imdbID}`}>\r\n//               <li>{m.Title}</li>\r\n//             </Link>\r\n//             <button onClick={() => addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\r\n//           </div>\r\n//          ))}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n  \r\n// }\r\n\r\n// function mapStateToProps(state) {        // recibe la parte del estado que necesitamos\r\n//   return {\r\n//     movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\r\n//   };\r\n// }\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n// \treturn bindActionCreators(actionsCreators, dispatch);   // me genera funciones dispatch para cada actionCreator (linea 3)\r\n// }\r\n\r\n\r\n// export default connect(\r\n//   mapStateToProps, mapDispatchToProps   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\r\n// )(Buscador);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}