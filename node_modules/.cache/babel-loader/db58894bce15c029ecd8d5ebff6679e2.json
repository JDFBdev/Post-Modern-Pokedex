{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Duckz\\\\Henry\\\\M2\\\\FT-M2\\\\12-React-Redux\\\\homework\\\\src\\\\components\\\\Buscador\\\\Buscador.js\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { Link } from 'react-router-dom';\n// import './Buscador.css';\n// import { addMovieFavorite, getMovies } from \"../../actions\";\n// export class Buscador extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       title: \"\"\n//     };\n//   }\n//   handleChange(event) {\n//     this.setState({ title: event.target.value });\n//   }\n//   handleSubmit(event) {\n//     event.preventDefault();\n//     this.props.getMovies(this.state.title);    // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\n//   }\n//   render() {\n//     const { title } = this.state;\n//     return (\n//       <div>\n//         <h2>Buscador</h2>\n//         <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\n//           <div>\n//             <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\n//             <input\n//               type=\"text\"\n//               id=\"title\"\n//               autoComplete=\"off\"\n//               value={title}\n//               onChange={(e) => this.handleChange(e)}\n//             />\n//           </div>\n//           <button type=\"submit\">BUSCAR</button>\n//         </form>\n//         <ul>\n//          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\n//          {this.props.movies?.map(m=> (\n//            <div>\n//              <Link to= {`/movie/${m.imdbID}`}>\n//               <li>{m.Title}</li>\n//             </Link>\n//             <button onClick={() => this.props.addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\n//           </div>\n//          ))}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n// function mapStateToProps(state) {        // recibe la parte del estado que necesitamos\n//   return {\n//     movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\n//   };\n// }\n// export default connect(\n//   mapStateToProps, { getMovies, addMovieFavorite }   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\n// )(Buscador);\n// ------------------------------------------------------------------------------------------------------------------------------//\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Buscador.css';\nimport { addMovieFavorite, getMovies } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buscador = () => {\n  _s();\n\n  var _state$movies;\n\n  const [state, setState] = useState({\n    title: ''\n  });\n\n  function handleChange(event) {\n    setState({\n      title: event.target.value\n    });\n  }\n\n  let movies;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    movies = getMovies(state.title); // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\n  }\n\n  const {\n    title\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buscador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Pel\\xEDcula: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          autoComplete: \"off\",\n          value: title,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"BUSCAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_state$movies = state.movies) === null || _state$movies === void 0 ? void 0 : _state$movies.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${m.imdbID}`,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: m.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addMovieFavorite(m),\n          children: \"Fav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Buscador, \"+q+UAduUJFntc+/Kbf9a5Ofs0sg=\");\n\n_c = Buscador;\n\nfunction mapStateToProps(state) {\n  // recibe la parte del estado que necesitamos\n  return {\n    movies: state.moviesLoaded // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\n\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getMovies,\n  addMovieFavorite\n} // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\n)(Buscador);\n\nvar _c;\n\n$RefreshReg$(_c, \"Buscador\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Duckz/Henry/M2/FT-M2/12-React-Redux/homework/src/components/Buscador/Buscador.js"],"names":["React","useState","connect","Link","addMovieFavorite","getMovies","Buscador","state","setState","title","handleChange","event","target","value","movies","handleSubmit","preventDefault","e","map","m","imdbID","Title","mapStateToProps","moviesLoaded"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import './Buscador.css';\r\n// import { addMovieFavorite, getMovies } from \"../../actions\";\r\n\r\n\r\n\r\n// export class Buscador extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       title: \"\"\r\n//     };\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     this.setState({ title: event.target.value });\r\n//   }\r\n  \r\n//   handleSubmit(event) {\r\n//     event.preventDefault();\r\n//     this.props.getMovies(this.state.title);    // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\r\n//   }\r\n\r\n//   render() {\r\n//     const { title } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <h2>Buscador</h2>\r\n//         <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\r\n//           <div>\r\n//             <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"title\"\r\n//               autoComplete=\"off\"\r\n//               value={title}\r\n//               onChange={(e) => this.handleChange(e)}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\">BUSCAR</button>\r\n//         </form>\r\n//         <ul>\r\n//          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\r\n//          {this.props.movies?.map(m=> (\r\n//            <div>\r\n//              <Link to= {`/movie/${m.imdbID}`}>\r\n//               <li>{m.Title}</li>\r\n//             </Link>\r\n//             <button onClick={() => this.props.addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\r\n//           </div>\r\n//          ))}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function mapStateToProps(state) {        // recibe la parte del estado que necesitamos\r\n//   return {\r\n//     movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\r\n//   };\r\n// }\r\n\r\n\r\n// export default connect(\r\n//   mapStateToProps, { getMovies, addMovieFavorite }   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\r\n// )(Buscador);\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Buscador.css';\r\nimport { addMovieFavorite, getMovies } from \"../../actions\";\r\n\r\n\r\n\r\nconst Buscador = () => {\r\n  const [state, setState] = useState({title: ''});\r\n\r\n  function handleChange(event) {\r\n    setState({ title: event.target.value });\r\n  }\r\n  \r\n  let movies;\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    movies = getMovies(state.title);    // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\r\n    \r\n  }\r\n\r\n  \r\n    const { title } = state;\r\n    return (\r\n      <div>\r\n        <h2>Buscador</h2>\r\n        <form className=\"form-container\" onSubmit={(e) => handleSubmit(e)}>\r\n          <div>\r\n            <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              autoComplete=\"off\"\r\n              value={title}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">BUSCAR</button>\r\n        </form>\r\n        <ul>\r\n         {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\r\n         {state.movies?.map(m=> (\r\n           <div>\r\n             <Link to= {`/movie/${m.imdbID}`}>\r\n              <li>{m.Title}</li>\r\n            </Link>\r\n            <button onClick={() => addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\r\n          </div>\r\n         ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nfunction mapStateToProps(state) {        // recibe la parte del estado que necesitamos\r\n  return {\r\n    movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\r\n  };\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps, { getMovies, addMovieFavorite }   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\r\n)(Buscador);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}