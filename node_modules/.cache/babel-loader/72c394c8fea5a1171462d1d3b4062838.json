{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Duckz\\\\Henry\\\\M2\\\\FT-M2\\\\12-React-Redux\\\\homework\\\\src\\\\components\\\\Buscador\\\\Buscador.js\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { Link } from 'react-router-dom';\n// import './Buscador.css';\n// import { addMovieFavorite, getMovies } from \"../../actions\";\n// import { bindActionCreators } from 'redux';\n// import * as actionsCreators from '../../actions/index';\n// export class Buscador extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       title: \"\"\n//     };\n//   }\n//   handleChange(event) {\n//     this.setState({ title: event.target.value });\n//   }\n//   handleSubmit(event) {\n//     event.preventDefault();\n//     this.props.getMovies(this.state.title);    // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\n//   }\n//   render() {\n//     const { title } = this.state;\n//     return (\n//       <div>\n//         <h2>Buscador</h2>\n//         <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\n//           <div>\n//             <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\n//             <input\n//               type=\"text\"\n//               id=\"title\"\n//               autoComplete=\"off\"\n//               value={title}\n//               onChange={(e) => this.handleChange(e)}\n//             />\n//           </div>\n//           <button type=\"submit\">BUSCAR</button>\n//         </form>\n//         <ul>\n//          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\n//          {this.props.movies?.map(m=> (\n//            <div>\n//              <Link to= {`/movie/${m.imdbID}`}>\n//               <li>{m.Title}</li>\n//             </Link>\n//             <button onClick={() => this.props.addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\n//           </div>\n//          ))}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n// function mapStateToProps(state) {        // recibe la parte del estado que necesitamos\n//   return {\n//     movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\n//   };\n// }\n// function mapDispatchToProps(dispatch) {\n// \treturn bindActionCreators(actionsCreators, dispatch);   // me genera funciones dispatch para cada actionCreator (linea 3)\n// }\n// export default connect(\n//   mapStateToProps, mapDispatchToProps   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\n// )(Buscador);\n// ------------------------------------------------------------------------------------------------------------------------------//\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Buscador.css';\nimport { bindActionCreators } from 'redux';\nimport * as actionsCreators from '../../actions/index';\nimport { getMovies, addMovieFavorite } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Buscador() {\n  _s();\n\n  const movies = useSelector(state => state.moviesLoaded);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    title: ''\n  });\n\n  function handleChange(event) {\n    setState({\n      title: event.target.value\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    dispatch(getMovies(state.title));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buscador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Pel\\xEDcula: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          autoComplete: \"off\",\n          value: state.title,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"BUSCAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies === null || movies === void 0 ? void 0 : movies.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${m.imdbID}`,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: m.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(addMovieFavorite(m)),\n          children: \"Fav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Buscador, \"se2CvwE9+zakgjSyW1xy0mPnW4U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Buscador;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buscador\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Duckz/Henry/M2/FT-M2/12-React-Redux/homework/src/components/Buscador/Buscador.js"],"names":["useSelector","useDispatch","React","useState","connect","Link","bindActionCreators","actionsCreators","getMovies","addMovieFavorite","Buscador","movies","state","moviesLoaded","dispatch","setState","title","handleChange","event","target","value","handleSubmit","preventDefault","e","map","m","imdbID","Title"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import './Buscador.css';\r\n// import { addMovieFavorite, getMovies } from \"../../actions\";\r\n// import { bindActionCreators } from 'redux';\r\n// import * as actionsCreators from '../../actions/index';\r\n\r\n\r\n\r\n// export class Buscador extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       title: \"\"\r\n//     };\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     this.setState({ title: event.target.value });\r\n//   }\r\n  \r\n//   handleSubmit(event) {\r\n//     event.preventDefault();\r\n//     this.props.getMovies(this.state.title);    // invoco a getmovies mediante las props de la clase, lo mismo con el titulo\r\n//   }\r\n\r\n//   render() {\r\n//     const { title } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <h2>Buscador</h2>\r\n//         <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\r\n//           <div>\r\n//             <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"title\"\r\n//               autoComplete=\"off\"\r\n//               value={title}\r\n//               onChange={(e) => this.handleChange(e)}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\">BUSCAR</button>\r\n//         </form>\r\n//         <ul>\r\n//          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\r\n//          {this.props.movies?.map(m=> (\r\n//            <div>\r\n//              <Link to= {`/movie/${m.imdbID}`}>\r\n//               <li>{m.Title}</li>\r\n//             </Link>\r\n//             <button onClick={() => this.props.addMovieFavorite(m)}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\r\n//           </div>\r\n//          ))}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function mapStateToProps(state) {        // recibe la parte del estado que necesitamos\r\n//   return {\r\n//     movies: state.moviesLoaded          // esto lo sacamos DEL STORE PORQUE ESTAS BUSCANDO LA DATA AL STORE\r\n//   };\r\n// }\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n// \treturn bindActionCreators(actionsCreators, dispatch);   // me genera funciones dispatch para cada actionCreator (linea 3)\r\n// }\r\n\r\n\r\n// export default connect(\r\n//   mapStateToProps, mapDispatchToProps   // pasamos los action creators que voy a queres despachar desde mi componente, o la funcion dispatchpropstonoseque\r\n// )(Buscador);\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Buscador.css';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionsCreators from '../../actions/index';\r\nimport { getMovies,addMovieFavorite } from \"../../actions\";\r\n\r\n\r\n\r\nexport default function Buscador(){\r\n\r\n  const movies = useSelector((state) => state.moviesLoaded);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({title: ''});\r\n\r\n  function handleChange(event) {\r\n    setState({ title: event.target.value });\r\n  }\r\n  \r\n  \r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    dispatch(getMovies(state.title));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Buscador</h2>\r\n      <form className=\"form-container\" onSubmit={(e) => handleSubmit(e)}>\r\n        <div>\r\n          <label className=\"label\" htmlFor=\"title\">Pel√≠cula: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            autoComplete=\"off\"\r\n            value={state.title}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">BUSCAR</button>\r\n      </form>\r\n      <ul>\r\n        {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\r\n        {movies?.map(m=> (\r\n          <div>\r\n            <Link to= {`/movie/${m.imdbID}`}>\r\n            <li>{m.Title}</li>\r\n          </Link>\r\n          <button onClick={() => dispatch(addMovieFavorite(m))}>Fav</button>  {/* No puedo pasar una funcion ejecutada, para eso uso arrow function */}\r\n        </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}